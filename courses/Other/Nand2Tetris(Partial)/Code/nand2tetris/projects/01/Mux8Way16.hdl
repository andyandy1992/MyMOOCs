// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor.
 * out = a if sel==000
 *       b if sel==001
 *       c if sel==010
 *		 d if sel==011
 *		 e if sel==100
 *	 	 f if sel==101
 *		 g if sel==110
 *       h if sel==111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux4Way16(a=a, b=b, c=c, d=d, sel=sel[0..1], out=abcd);
	Mux4Way16(a=e, b=f, c=g, d=h, sel=sel[0..1], out=efgh);
	
	Mux16(a=abcd, b=efgh, sel=sel[2], out=out);
	
	// NOTE: arrays are read right to left (backwards conveyor belt)
	
	/*sel[0] determines a/c OR b/d
	Mux16(a=a, b=b, sel=sel[0], out=a.or.b);
	Mux16(a=c, b=d, sel=sel[0], out=c.or.d);
	Mux16(a=e, b=f, sel=sel[0], out=e.or.f);
	Mux16(a=g, b=h, sel=sel[0], out=g.or.h);
	
	//sort sel[1]	
	Mux16(a=a.or.b, b=c.or.d, sel=sel[1], out=sort.sel1.1);
	Mux16(a=e.or.f, b=g.or.h, sel=sel[1], out=sort.sel1.2);
	
	//sort sel[2]
	Mux16(a=sort.sel1.1, b=sort.sel1.2, sel=sel[2], out=out); */
}